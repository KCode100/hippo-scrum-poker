"use client";
import React, { useEffect, useRef, useState, memo } from "react";
import { motion } from "framer-motion";
import { twMerge } from "tailwind-merge";
import { cn } from "@/utils/cn";

export const TextRevealCard = ({
  text,
  revealText,
  children,
  className,
}: {
  text: string;
  revealText: string;
  children?: React.ReactNode;
  className?: string;
}) => {
  const [widthPercentage, setWidthPercentage] = useState(0);
  const cardRef = useRef<HTMLDivElement | any>(null);
  const [left, setLeft] = useState(0);
  const [localWidth, setLocalWidth] = useState(0);
  const [isMouseOver, setIsMouseOver] = useState(false);

  useEffect(() => {
    if (cardRef.current) {
      const { left, width: localWidth } =
        cardRef.current.getBoundingClientRect();
      setLeft(left);
      setLocalWidth(localWidth);
    }
  }, []);

  function mouseMoveHandler(event: any) {
    event.preventDefault();

    const { clientX } = event;
    if (cardRef.current) {
      const relativeX = clientX - left;
      setWidthPercentage((relativeX / localWidth) * 100);
    }
  }

  function mouseLeaveHandler() {
    setIsMouseOver(false);
    setWidthPercentage(0);
  }
  function mouseEnterHandler() {
    setIsMouseOver(true);
  }

  const rotateDeg = (widthPercentage - 50) * 0.1;
  return (
    <div
      onMouseEnter={mouseEnterHandler}
      onMouseLeave={mouseLeaveHandler}
      onMouseMove={mouseMoveHandler}
      ref={cardRef}
      className={cn(
        "bg-hippo-brand-navy p-8 relative overflow-hidden text-center",
        className
      )}
    >
      {children}
      <div className="h-full max-w-screen-sm mx-auto  relative flex items-center overflow-hidden">
        <motion.div
          style={{
            width: "100%",
          }}
          animate={
            isMouseOver
              ? {
                  opacity: widthPercentage > 0 ? 1 : 0,
                  clipPath: `inset(0 ${100 - widthPercentage}% 0 0)`,
                }
              : {
                  clipPath: `inset(0 ${100 - widthPercentage}% 0 0)`,
                }
          }
          transition={isMouseOver ? { duration: 0 } : { duration: 0.4 }}
          className="absolute bg-hippo-brand-navy z-20  will-change-transform"
        >
          <p
            style={{
              textShadow: "4px 4px 15px rgba(0,0,0,0.5)",
            }}
            className="text-base text-center sm:text-[3rem] leading-snug py-10 font-bold text-hippo-brand-pink bg-clip-text bg-gradient-to-b from-white to-neutral-300"
          >
            {revealText}<br />
            <SVGIllustration color="#FFA3B5" />
          </p>
        </motion.div>
        <motion.div
          animate={{
            left: `${widthPercentage}%`,
            rotate: `${rotateDeg}deg`,
            opacity: widthPercentage > 0 ? 1 : 0,
          }}
          transition={isMouseOver ? { duration: 0 } : { duration: 0.4 }}
          className="h-full max-w-screen-sm mx-auto w-[8px] bg-gradient-to-b from-transparent via-neutral-400 to-transparent absolute z-50 will-change-transform"
        ></motion.div>

        <div className="w-full overflow-hidden [mask-image:linear-gradient(to_bottom,transparent,white,transparent)]">
          <p className="text-base text-center sm:text-[3rem] leading-snug py-10 font-bold bg-clip-text text-transparent bg-hippo-brand-grey">
            {text}<br />
            <SVGIllustration color="#FFA3B5" />
          </p>
          <MemoizedStars />
        </div>
      </div>
    </div>
  );
};

export const TextRevealCardTitle = ({
  children,
  className,
}: {
  children: React.ReactNode;
  className?: string;
}) => {
  return (
    <h2 className={twMerge("text-white text-lg mb-2", className)}>
      {children}
    </h2>
  );
};

export const TextRevealCardDescription = ({
  children,
  className,
}: {
  children: React.ReactNode;
  className?: string;
}) => {
  return (
    <p className={twMerge("text-hippo-brand-grey text-sm", className)}>{children}</p>
  );
};

const Stars = () => {
  const randomMove = () => Math.random() * 4 - 2;
  const randomOpacity = () => Math.random();
  const random = () => Math.random();
  return (
    <div className="absolute inset-0">
      {[...Array(140)].map((_, i) => (
        <motion.span
          key={`star-${i}`}
          animate={{
            top: `calc(${random() * 100}% + ${randomMove()}px)`,
            left: `calc(${random() * 100}% + ${randomMove()}px)`,
            opacity: randomOpacity(),
            scale: [1, 1.2, 0],
          }}
          transition={{
            duration: random() * 10 + 20,
            repeat: Infinity,
            ease: "linear",
          }}
          style={{
            position: "absolute",
            top: `${random() * 100}%`,
            left: `${random() * 100}%`,
            width: `2px`,
            height: `2px`,
            backgroundColor: "white",
            borderRadius: "50%",
            zIndex: 1,
          }}
          className="inline-block"
        ></motion.span>
      ))}
    </div>
  );
};

const SVGIllustration = ({color}: {color: string}) => (
  <svg version="1.0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 600.000000 458.000000" preserveAspectRatio="xMidYMid meet">
    <g transform="translate(0.000000,458.000000) scale(0.100000,-0.100000)" fill={color} stroke="none">
      <path d="M2672 4157 c38 -38 60 -93 78 -193 6 -38 9 -206 8 -445 l-3 -384 28
      -58 c29 -58 83 -107 119 -107 22 0 22 -5 -1 -90 -22 -77 -45 -243 -39 -280 3
      -21 7 -18 35 28 17 28 46 58 64 67 41 22 81 11 196 -51 88 -48 116 -53 151
      -28 34 23 62 11 121 -51 52 -55 53 -57 46 -102 -4 -26 -15 -81 -26 -122 -23
      -91 -52 -125 -120 -141 -52 -13 -200 -17 -218 -6 -39 24 36 66 118 66 47 0 49
      1 88 58 63 90 106 182 84 182 -6 0 -35 -37 -65 -82 -61 -95 -98 -133 -120
      -125 -14 6 -13 12 4 51 10 25 22 62 25 83 6 36 5 37 -10 18 -9 -11 -25 -51
      -37 -88 -21 -70 -52 -105 -83 -93 -20 7 -20 67 1 135 16 54 15 106 -1 66 -54
      -135 -93 -186 -130 -171 -27 10 -27 34 -1 100 27 67 33 106 16 106 -14 0 -36
      -47 -54 -115 -16 -61 -37 -88 -61 -78 -20 7 -32 56 -39 152 -7 103 -28 152
      -73 166 -18 6 -45 23 -60 37 -59 56 -102 59 -316 23 -141 -23 -151 -23 -244
      -10 -53 8 -99 15 -102 15 -14 0 18 19 52 30 20 6 37 16 37 20 0 11 -123 51
      -171 54 -21 2 -46 14 -63 29 -35 33 -786 364 -1345 594 -193 79 -215 66 -164
      -99 24 -82 28 -109 28 -223 0 -118 -3 -135 -25 -180 -14 -28 -67 -94 -122
      -152 -106 -110 -118 -138 -74 -166 44 -30 231 -88 481 -152 270 -69 1016 -237
      1052 -237 13 0 28 -7 34 -14 6 -8 20 -14 30 -14 32 0 157 68 175 95 16 24 15
      27 -1 45 -14 15 -15 20 -4 20 32 -1 105 -43 143 -84 23 -24 48 -45 56 -48 13
      -4 13 -7 1 -21 -8 -10 -12 -31 -9 -52 4 -31 -2 -41 -43 -84 -68 -71 -136 -176
      -222 -346 -81 -160 -114 -205 -150 -205 -35 0 -123 -48 -152 -82 -30 -35 -33
      -68 -7 -68 24 0 101 50 157 101 l45 42 48 -18 c84 -32 242 -224 242 -294 0
      -18 -45 -113 -66 -140 -2 -2 -21 12 -42 31 -50 45 -108 79 -202 118 -90 37
      -243 80 -287 80 -67 0 -300 -186 -581 -464 -174 -171 -269 -281 -292 -336
      l-14 -33 -288 6 c-170 3 -290 2 -294 -4 -3 -5 46 -9 119 -9 68 0 212 -3 320
      -7 147 -4 197 -3 197 5 0 7 -7 12 -15 12 -8 0 -15 6 -15 14 0 79 642 695 820
      786 37 19 39 19 116 0 172 -41 335 -114 404 -181 l40 -39 -36 -58 c-20 -31
      -96 -149 -169 -262 -186 -289 -198 -312 -152 -294 25 9 161 177 242 299 86
      128 126 210 133 273 3 27 21 73 45 114 48 85 46 106 -22 210 -69 106 -175 198
      -226 198 -13 0 -10 9 13 43 16 23 60 103 97 177 75 149 143 254 204 314 29 28
      42 35 45 25 2 -8 8 -27 14 -44 8 -28 3 -39 -64 -135 -40 -58 -116 -149 -169
      -203 -56 -57 -95 -105 -93 -114 2 -10 22 -21 51 -28 26 -7 61 -25 78 -41 32
      -31 89 -140 110 -211 7 -24 14 -43 17 -43 10 0 334 131 370 149 21 11 58 41
      83 68 42 45 47 47 70 35 13 -7 34 -10 47 -7 18 5 25 1 29 -16 12 -44 81 -175
      105 -197 25 -23 84 -37 327 -81 138 -24 173 -45 330 -194 85 -81 115 -118 149
      -182 24 -44 81 -144 128 -221 78 -131 109 -173 118 -163 2 2 -18 52 -44 111
      -68 150 -101 258 -101 336 -1 97 21 114 272 217 l126 51 69 -65 c38 -36 166
      -151 284 -255 118 -105 264 -235 323 -290 122 -112 122 -114 6 -115 -38 -1
      -73 -7 -84 -15 -18 -13 -18 -14 3 -25 31 -17 162 -32 202 -23 29 7 34 12 32
      32 l-4 23 516 -5 c284 -3 516 -3 516 1 0 7 -600 21 -910 21 l-146 0 -44 46
      c-25 25 -164 152 -310 282 -371 331 -435 392 -432 413 7 40 -52 110 -78 94
      -16 -10 -12 -28 15 -67 14 -20 22 -39 17 -41 -4 -3 -59 -26 -122 -52 -159 -64
      -230 -104 -251 -140 -35 -56 -20 -178 40 -324 17 -41 29 -76 27 -78 -3 -3
      -144 241 -181 316 l-26 53 34 52 c19 28 57 77 86 108 53 58 107 86 192 102 47
      8 73 37 65 70 -10 42 -260 292 -307 308 -21 7 13 47 51 59 46 15 127 56 163
      83 16 11 49 60 74 109 61 118 88 138 226 173 84 20 118 34 137 53 23 24 34 26
      117 29 l92 4 50 -51 c27 -27 60 -53 74 -56 56 -15 947 135 1114 186 84 26 83
      41 -12 135 -129 128 -169 226 -141 348 9 36 30 96 47 133 52 114 60 140 44
      153 -9 8 -26 5 -64 -9 -65 -26 -194 -59 -479 -122 -300 -66 -495 -117 -557
      -144 -47 -20 -53 -27 -85 -96 -28 -62 -34 -85 -33 -139 1 -80 19 -129 84 -238
      28 -46 49 -85 47 -88 -2 -2 -20 -1 -40 2 -33 6 -39 12 -67 73 -33 73 -61 176
      -61 231 0 20 9 69 20 109 18 64 19 76 7 89 -13 12 -25 9 -95 -21 -44 -20 -100
      -41 -123 -47 -24 -6 -55 -19 -69 -29 -40 -27 -152 -43 -338 -46 -199 -4 -235
      -9 -230 -33 3 -15 20 -17 153 -14 82 2 159 1 172 -3 13 -3 53 -31 90 -62 61
      -52 67 -55 79 -38 7 10 18 41 24 70 6 29 18 61 26 71 9 11 13 14 10 8 -9 -18
      18 -97 78 -234 30 -69 52 -127 48 -131 -4 -3 -36 -11 -72 -18 -133 -26 -320
      -102 -320 -131 0 -3 -50 -65 -111 -136 -61 -71 -116 -139 -121 -151 -12 -24
      -62 -37 -102 -27 -17 4 -48 35 -86 86 -33 44 -57 78 -53 76 92 -40 98 -41 136
      -16 52 33 50 43 -21 102 -41 33 -73 46 -72 29 1 -5 19 -20 40 -35 26 -18 40
      -36 40 -49 0 -20 -3 -21 -52 -15 -62 9 -115 30 -145 58 -19 18 -23 32 -23 82
      1 36 9 84 21 116 11 30 24 73 30 94 5 22 20 49 33 61 13 12 25 26 27 31 2 5
      28 30 57 54 29 25 55 54 58 65 3 12 -8 50 -24 86 -16 36 -33 86 -37 110 -4 24
      -38 103 -75 174 -83 159 -107 232 -91 284 18 62 61 1021 48 1074 -9 34 -33 35
      -41 1 -7 -26 -8 -27 -79 -21 -45 3 -120 20 -200 46 -93 30 -145 41 -190 41
      -60 0 -141 10 -201 26 l-30 7 36 -36z m189 -11 c50 -4 121 -20 205 -46 71 -23
      159 -44 195 -47 61 -5 67 -4 83 18 15 22 16 16 16 -121 0 -131 -4 -220 -26
      -675 -7 -138 -8 -139 -20 -91 -7 27 -21 57 -31 67 -34 35 -177 49 -297 29 -53
      -8 -64 -15 -118 -70 -57 -58 -60 -63 -55 -100 3 -21 15 -54 28 -72 l23 -33
      -23 20 c-70 61 -85 170 -70 515 15 340 3 478 -51 582 l-19 38 42 -5 c23 -2 76
      -7 118 -9z m-2104 -830 c705 -297 1113 -479 1141 -509 l21 -23 -68 -71 c-37
      -40 -83 -100 -102 -135 -30 -57 -34 -70 -32 -135 2 -69 17 -176 30 -210 5 -13
      1 -15 -18 -11 -197 42 -853 192 -1022 234 -256 64 -456 128 -492 156 -23 18
      -24 21 -11 46 8 15 52 63 97 106 105 102 137 167 145 287 6 86 -8 182 -42 305
      -19 67 -15 94 15 94 11 0 163 -60 338 -134z m2467 -56 c63 -14 71 -28 74 -135
      2 -52 1 -95 -3 -95 -4 0 -25 16 -46 35 -50 45 -94 45 -270 0 -26 -6 -26 -6
      -32 65 -3 40 -11 78 -18 86 -15 19 3 41 39 47 53 8 218 6 256 -3z m-294 -147
      c0 -58 -3 -73 -15 -73 -12 0 -15 14 -15 63 0 34 3 73 7 85 11 42 23 2 23 -75z
      m-47 20 c-6 -77 8 -126 32 -117 10 4 15 0 15 -15 0 -33 -16 -25 -60 30 -46 59
      -52 101 -19 143 11 14 24 26 28 26 5 0 6 -30 4 -67z m378 -96 c38 -35 47 -50
      52 -90 7 -48 40 -123 122 -277 25 -47 45 -96 45 -109 0 -22 -6 -19 -59 32 -62
      59 -83 67 -115 42 -31 -24 -60 -18 -154 31 -60 32 -106 48 -140 52 -50 4 -53
      3 -92 -36 -36 -36 -40 -38 -40 -17 0 40 30 198 50 264 11 35 20 74 20 87 0 13
      3 24 8 25 4 0 39 9 77 19 39 10 95 19 125 19 51 0 58 -3 101 -42z m2429 -123
      c0 -4 -18 -46 -39 -93 -111 -246 -95 -355 77 -533 96 -100 98 -93 -34 -127
      -161 -41 -938 -171 -1023 -171 -25 0 -43 11 -79 46 l-47 45 48 -6 c26 -3 47
      -3 47 1 0 4 -25 49 -56 101 -105 176 -117 259 -55 382 27 53 39 66 77 82 57
      26 248 75 539 139 280 62 462 108 495 126 27 14 50 18 50 8z m-3650 -151 c33
      -9 60 -19 60 -23 0 -8 -70 -30 -96 -30 -29 0 -64 28 -64 51 0 24 21 24 100 2z
      m-72 -62 l23 -12 -21 -26 c-25 -33 -57 -133 -66 -211 l-6 -60 -27 14 c-60 32
      -79 13 -94 -92 -13 -96 -22 -80 -38 63 l-12 111 30 64 c18 38 56 92 93 132 62
      65 64 67 79 48 9 -11 26 -25 39 -31z m711 -32 c30 -18 33 -22 18 -31 -10 -5
      -50 -12 -90 -15 -82 -6 -102 -19 -112 -71 -9 -48 -41 -109 -63 -120 -9 -5 -50
      -12 -90 -15 -84 -7 -102 -17 -102 -58 0 -43 123 -282 152 -296 17 -9 18 -12 6
      -12 -9 -1 -49 15 -90 34 -52 25 -81 34 -100 29 -26 -5 -28 -4 -28 30 0 32 3
      36 26 36 14 0 34 -5 44 -10 10 -6 21 -6 24 -2 3 5 -22 21 -55 36 -34 16 -78
      47 -102 72 -27 29 -61 51 -97 65 -86 32 -100 44 -100 87 1 97 61 252 98 252 9
      0 52 -7 95 -15 102 -19 158 -18 287 5 147 26 236 26 279 -1z m70 -87 c35 -68
      52 -146 49 -223 -4 -96 -20 -100 -60 -12 -36 78 -36 78 -44 71 -3 -3 4 -42 16
      -87 23 -90 21 -97 -33 -149 l-35 -34 -26 79 c-28 84 -42 111 -51 102 -3 -3 6
      -35 19 -70 38 -101 42 -143 16 -169 -12 -12 -31 -20 -43 -18 -22 3 -33 20 -68
      106 -26 64 -45 69 -34 10 14 -77 12 -91 -15 -105 -20 -10 -29 -10 -45 1 -19
      12 -110 184 -136 255 -16 48 4 61 93 61 60 0 71 3 99 28 21 19 38 50 54 97
      l22 70 68 7 c37 3 69 9 73 12 3 3 18 6 33 6 23 0 32 -8 48 -38z m53 -3 c13
      -17 21 -56 28 -134 6 -63 17 -119 26 -132 16 -25 53 -30 73 -10 10 10 14 9 22
      -5 15 -28 68 -23 101 9 28 27 28 27 28 4 0 -12 5 -32 11 -43 8 -14 8 -23 0
      -31 -19 -19 -12 -47 15 -57 33 -13 157 -12 213 1 24 5 46 7 49 4 3 -3 -9 -50
      -28 -104 -36 -109 -39 -194 -7 -229 16 -18 14 -18 -51 -6 -37 6 -87 17 -112
      23 -69 16 -117 13 -148 -9 -15 -11 -57 -25 -92 -31 -85 -13 -109 -36 -117
      -112 -5 -47 -9 -57 -24 -57 -17 0 -19 9 -19 76 0 72 -1 77 -31 102 -17 15 -64
      60 -105 101 -93 94 -119 111 -169 111 l-40 1 28 15 c20 11 27 22 28 47 l0 32
      19 -42 c23 -53 59 -65 98 -36 15 11 28 30 30 42 2 12 14 26 26 31 37 14 86 83
      86 120 0 31 1 32 18 17 26 -24 41 -21 53 11 22 54 -1 200 -46 306 -12 27 14
      17 37 -15z m1658 -1 c0 -7 -7 -35 -15 -62 -31 -102 -12 -255 47 -369 11 -22
      18 -40 16 -42 -2 -1 -45 -4 -97 -6 l-94 -4 -64 149 c-36 82 -67 170 -70 196
      -6 53 -20 43 127 94 41 15 86 33 100 41 31 18 50 19 50 3z m-935 -153 c18 -54
      18 -55 -1 -76 -10 -12 -30 -29 -44 -39 l-26 -19 17 67 c10 37 18 79 18 95 1
      43 15 32 36 -28z m606 18 c-5 -10 -14 -44 -21 -75 -6 -32 -14 -58 -17 -58 -3
      0 -29 22 -58 49 -73 69 -107 77 -262 61 -67 -6 -128 -8 -135 -4 -21 14 63 22
      237 24 88 2 174 6 190 10 17 4 40 8 53 9 19 1 21 -2 13 -16z m-2205 -97 c32
      -29 44 -46 39 -58 -4 -9 -41 -35 -83 -57 -59 -30 -81 -37 -95 -30 -12 7 -15
      15 -8 27 4 9 11 45 15 80 8 88 18 104 56 90 17 -5 51 -29 76 -52z m1378 -18
      c-12 -22 -37 -48 -45 -48 -4 0 5 14 19 30 28 32 38 38 26 18z m-993 -263 c44
      -21 81 -33 92 -29 11 3 39 3 65 -1 40 -6 57 -18 148 -106 57 -54 108 -99 113
      -99 5 0 15 -16 21 -36 13 -39 5 -144 -10 -144 -21 0 -43 -52 -41 -100 1 -45
      -1 -50 -22 -50 -12 0 -29 4 -37 10 -12 8 -12 14 3 45 20 43 21 45 4 45 -13 0
      -37 -40 -37 -62 0 -19 -61 -88 -104 -117 -36 -25 -375 -166 -380 -159 -2 2
      -13 32 -26 68 -45 128 -120 220 -179 220 -17 0 -33 5 -36 10 -4 6 38 57 92
      114 54 56 129 148 167 204 l68 101 -12 50 c-20 83 0 90 111 36z m1995 -4 c-8
      -13 -51 -28 -145 -51 -141 -35 -173 -61 -226 -176 -19 -40 -47 -83 -66 -99
      -36 -30 -176 -101 -185 -93 -5 5 13 27 164 207 108 128 135 144 314 191 118
      31 153 36 144 21z m-1107 -215 c31 -8 77 -17 104 -21 46 -6 47 -7 47 -41 0
      -27 9 -43 43 -77 24 -23 61 -51 82 -61 22 -11 54 -30 72 -43 17 -13 36 -23 42
      -23 6 0 20 -22 32 -50 28 -65 79 -110 188 -165 49 -24 92 -49 96 -54 8 -14
      -25 -33 -160 -91 -204 -87 -241 -129 -200 -227 8 -19 15 -38 15 -41 0 -3 -26
      19 -57 49 -69 65 -158 139 -194 161 -34 21 -116 42 -249 63 -119 19 -208 41
      -229 58 -27 23 -102 191 -97 217 21 110 32 135 59 138 22 3 29 -3 40 -31 23
      -53 132 -109 152 -77 3 5 -3 27 -15 49 -11 22 -20 49 -20 61 0 11 -4 20 -10
      20 -5 0 -10 -15 -10 -34 0 -18 -6 -39 -14 -45 -12 -10 -21 -3 -51 36 -34 44
      -37 52 -32 102 5 68 25 86 106 95 36 4 69 14 83 26 28 24 96 26 177 6z m248
      -118 c57 -77 60 -82 33 -68 -30 16 -99 79 -111 102 -5 10 -7 23 -4 28 10 17
      39 -5 82 -62z m78 52 l20 -9 -20 0 c-11 0 -27 4 -35 9 -13 9 -13 10 0 9 8 0
      24 -4 35 -9z m-779 -167 c-3 -10 -8 -30 -12 -45 -3 -16 -10 -28 -15 -28 -13 0
      -11 34 3 65 13 28 32 35 24 8z m899 -13 c-3 -5 -17 -10 -30 -10 -13 0 -27 5
      -30 10 -4 6 8 10 30 10 22 0 34 -4 30 -10z m-675 -52 c0 -12 -38 -10 -45 2 -4
      6 -1 18 6 26 12 14 14 14 26 -2 7 -10 13 -21 13 -26z m737 -32 c60 -46 173
      -156 160 -156 -4 0 -36 14 -70 31 -90 46 -145 96 -161 147 -11 32 5 28 71 -22z
      m-1957 -35 c0 -5 -30 -32 -67 -60 -64 -48 -93 -61 -93 -43 0 16 66 72 110 91
      53 24 50 23 50 12z m2188 -203 c15 -15 16 -45 1 -54 -6 -3 -43 -15 -81 -25
      -94 -24 -134 -53 -208 -151 -34 -46 -65 -84 -69 -86 -10 -4 -31 60 -31 95 0
      46 49 81 204 148 72 31 138 63 146 71 18 17 23 17 38 2z m192 -91 c0 -7 -12 1
      -25 16 -14 15 -25 33 -25 40 0 7 12 -1 25 -16 14 -15 25 -33 25 -40z m-2163
      -312 c-52 -108 -223 -351 -293 -415 -35 -33 -36 -33 156 263 161 250 207 301
      137 152z m2972 -479 c9 -11 8 -15 -5 -20 -25 -10 -88 -7 -146 6 -50 11 -51 12
      -23 19 56 13 162 10 174 -5z"/>
    </g>
  </svg>
)

export const MemoizedStars = memo(Stars);
